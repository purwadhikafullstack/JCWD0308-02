import type { Metadata } from 'next';
import { Inter as FontSans } from 'next/font/google';
import './globals.css';
import { cn } from '@/lib/utils';
import Providers from './provider';
import { validateRequest } from '@/lib/auth';
import { StoreProvider } from './storeProvider';
import { getQueryClient } from './get-query-client';
import { getUserProfile } from '@/lib/fetch-api/user/server';
import { HydrationBoundary, dehydrate } from '@tanstack/react-query';

export const runtime = 'nodejs'; // 'nodejs' (default) | 'edge'
export const fetchCache = 'default-no-store';

const fontSans = FontSans({
  subsets: ['latin'],
  variable: '--font-sans',
});

export const metadata: Metadata = {
  title: 'Grosirun',
  description: 'Generated by create next app',
  icons: {
    icon: '/favicon-rev3.ico',
  },
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const auth = await validateRequest();
  console.log(auth);
  const queryClient = getQueryClient();

  void queryClient.prefetchQuery({
    queryKey: ['user-profile'],
    queryFn: getUserProfile,
  });

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(
          'min-h-screen bg-background font-sans antialiased',
          fontSans.variable,
        )}
      >
        <StoreProvider>
          <Providers>
            <HydrationBoundary state={dehydrate(queryClient)}>
              {children}
            </HydrationBoundary>
          </Providers>
        </StoreProvider>
      </body>
    </html>
  );
}
